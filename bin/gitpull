#!/usr/bin/python

import sys,os

homegit = 'CiscoSystems'

repo = sys.argv[1].strip()
branch = sys.argv[2].strip()
pullreq = sys.argv[3].strip()


#pull a fresh copy of the repo
print "pulling clone of repo"
if os.path.exists('/opt/' + repo):
    print "remove local copy from /opt"
    os.system('rm -rf /opt/' + repo)

os.chdir('/opt') 
print 'cloning repo'
cmd = 'git clone http://github.com/' + homegit + '/' + repo + '.git -b '
cmd = cmd + branch
 
os.system(cmd)

#patch git config
print 'patching git/config'
lines = open('/opt/' + repo + '/.git/config').readlines()
confdata = ""
for line in lines:
    if line.startswith('[remote "origin"]'):
        confdata = confdata + line 
        confdata = confdata + '    fetch = +refs/pull/*/head'
        confdata = confdata + ':refs/remotes/origin/pr/*' + "\n"
    else:    
        confdata = confdata + line  

fp = open('/opt/' + repo + '/.git/config','w')
fp.write(confdata)
fp.close()

os.chdir('/opt/' + repo)
print 'checking out pull'
os.system('git fetch origin')
os.system('git checkout pr/' + pullreq)
print "installing code"

if repo.startswith('puppet-'):
    modname = repo.replace('puppet-','')
    os.system('cp -r /opt/' + repo + '/* /usr/share/puppet/modules/' + modname)
    print "puppet code installed in " + '/usr/share/puppet/modules/' + modname
    print "pull code installed and ready for testing"
    sys.exit()

if 'manifests' in repo:
    cmd = 'cp -r /opt/' + repo 
    cmd = cmd +  '/* /usr/share/puppet/manifests/* /etc/puppet/manifests'
    os.system(cmd)
    print 'manifest patch requested'
    print 'copied manifests to /etc/puppet/manifests'
    cmd = 'cp -r /opt/' + repo 
    cmd = cmd +  '/* /usr/share/puppet/templates/* /etc/puppet/templates'
    os.system(cmd)
    print 'copied templates'
    print 'pull code installed and ready for testing'
    sys.exit()


print "clone and pull request applied to repo located in /opt"
print "manually install the code and beging testing"
 


